#forkcolspot
#Jie Nan at MAXIV, 12/2016
#jie.nan@maxiv.lu.se
#to run XDS colspot on multiple nodes under SLURM 

ntask=$1  #total number of jobs
maxcpu=$2 #maximum number of processors used by each job
	   #maxcpu=1: use 'mcolspot' (single processor)
	   #maxcpu>1: use 'mcolspot_par' (openmp version)

pids=""                    #list of background process ID's
itask=1
jobid_tmp=""
jobid_list=""


while test $itask -le $ntask
do
   if [ $maxcpu -gt 1 ]
   then
      if [ $itask -eq 1 ]
      then
         echo "The first job is launched on the local node that runs XDS"
         echo "$itask" | mcolspot_par &
      else
         echo "job $itask is submited on to SLURM, with maxcpu=$maxcpu"
         jobid_tmp=`sbatch --export=ALL --tasks-per-node=$maxcpu forkcolspot_job $itask &`
         jobid_tmp=`echo $jobid_tmp |awk '/Submitted batch job/ {print $4}'`
         jobid_list="$jobid_list,$jobid_tmp"
      fi
   else # ONLY use the node that runs XDS
      echo "$itask" | mcolspot &
   fi
   
   pids="$pids $!"  #append id of the background process just started
   itask=`expr $itask + 1`
done
#trap "kill -15 $pids" 2 15  # 2:Control-C; 15:kill
wait  #wait for all background processes issued by this shell
#wait for all the colspot jobs submited to SLURM are finished
xds_wait_queue $jobid_list &
wait $!
rm -f mcolspot.tmp  #this temporary file was generated by xds
rm -rf fork*job*
