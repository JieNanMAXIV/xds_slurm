#forkintegate
#Jie Nan at MAXIV, 12/2016
#jie.nan@maxiv.lu.se
#to run XDS integrate on multiple nodes under SLURM

fframe=$1 #id number of the first image
ni=$2     #number of images in the data set
ntask=$3  #total number of jobs
niba0=$4  #minimum number of images in a batch
maxcpu=$5 #maximum number of processors used by each job
          #maxcpu=1: use 'mintegrate' (single processor)
          #maxcpu>1: use 'mintegrate_par' (openmp version)

minitask=$(($ni / $ntask)) #minimum number of images in a job
mtask=$(($ni % $ntask))    #number of jobs with minitask+1 images
pids=""                    #list of background process ID's
nba=0
litask=0
itask=1
jobid_tmp=""
jobid_list=""

while test $itask -le $ntask
do
   if [ $itask -gt $mtask ]
      then nitask=$minitask
      else nitask=$(($minitask + 1))
   fi
   fitask=`expr $litask + 1`
   litask=`expr $litask + $nitask`
   if [ $nitask -lt $niba0 ]
      then n=$nitask
      else n=$niba0
   fi
   if [ $n -lt 1 ]
      then n=1
   fi
   nbatask=$(($nitask / $n))
   nba=`expr $nba + $nbatask`
   image1=$(($fframe + $fitask - 1)) #id number of the first image


   if [ $maxcpu -gt 1 ]
     #submit job to slurm
   then
      if [ $itask -eq 1 ] 
      then 
         echo "The first job is launched on the local node that runs XDS, $image1 $nitask $itask $nbatask"
         echo "$image1 $nitask $itask $nbatask" | mintegrate_par &
      else
         echo "job $itask is submited on to SLURM, with maxcpu=$maxcpu, $image1 $nitask $itask $nbatask"
         jobid_tmp=`sbatch --export=ALL --tasks-per-node=$maxcpu forkintegrate_job $image1 $nitask $itask $nbatask &`
         jobid_tmp=`echo $jobid_tmp |awk '/Submitted batch job/ {print $4}'`
         jobid_list="$jobid_list,$jobid_tmp"
      fi
   else # ONLY use the node that runs XDS
      echo "$image1 $nitask $itask $nbatask" | mintegrate &
   fi

   pids="$pids $!"  #append id of the background process just started

   itask=`expr $itask + 1`
done
#trap "kill -15 $pids" 2 15  # 2:Control-C; 15:kill
wait  #wait for all background processes issued by this shell
#wait for all the integrate jobs submited to SLURM are finished
xds_wait_queue $jobid_list &
wait $!
rm -f mintegrate.tmp  #this temporary file was generated by mintegrate
rm -rf fork*job*
